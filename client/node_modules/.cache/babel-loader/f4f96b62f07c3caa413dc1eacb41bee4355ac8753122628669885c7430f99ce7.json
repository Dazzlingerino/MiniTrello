{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/TaskFlow.tsx\",\n  _s = $RefreshSig$();\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Column from 'main/components/Column';\nimport Card from 'main/components/Card';\nimport useTaskFlow from 'main/hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskFlow = () => {\n  _s();\n  const {\n    loading,\n    error,\n    columns,\n    newCardText,\n    setNewCardText,\n    handleAddCard,\n    handleDeleteCard,\n    handleDragEnd,\n    setDraggedCard\n  } = useTaskFlow();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragStart: start => setDraggedCard(start.draggableId),\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex overflow-auto\",\n      children: columns === null || columns === void 0 ? void 0 : columns.map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: column.id,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            id: column.id,\n            title: column.title,\n            children: [column.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n              id: card.id,\n              index: index,\n              text: card.text,\n              handleDeleteCard: () => handleDeleteCard(card.id)\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Add new card\",\n                value: cardTextByColumn[column.id] || '',\n                onChange: e => setCardTextByColumn({\n                  ...cardTextByColumn,\n                  [column.id]: e.target.value\n                }),\n                className: \"w-full rounded border border-gray-200 p-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  handleAddCard(column.id, cardTextByColumn[column.id] || '');\n                  setCardTextByColumn({\n                    ...cardTextByColumn,\n                    [column.id]: '' // Clear the input field after adding the card\n                  });\n                },\n                className: \"mt-2 rounded bg-blue-500 px-4 py-2 text-lg text-white hover:bg-blue-600\",\n                children: \"Add Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, column.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskFlow, \"tfEobHfj55VWkeucYd8D4GUYR3E=\", false, function () {\n  return [useTaskFlow];\n});\n_c = TaskFlow;\nexport default TaskFlow;\nvar _c;\n$RefreshReg$(_c, \"TaskFlow\");","map":{"version":3,"names":["DragDropContext","Droppable","Column","Card","useTaskFlow","jsxDEV","_jsxDEV","TaskFlow","_s","loading","error","columns","newCardText","setNewCardText","handleAddCard","handleDeleteCard","handleDragEnd","setDraggedCard","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onDragStart","start","draggableId","onDragEnd","className","map","column","droppableId","id","provided","snapshot","ref","innerRef","droppableProps","title","cards","card","index","text","placeholder","type","value","cardTextByColumn","onChange","e","setCardTextByColumn","target","onClick","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/TaskFlow.tsx"],"sourcesContent":["import { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport Column from 'main/components/Column' \nimport Card from 'main/components/Card' \nimport useTaskFlow from 'main/hook'\n\nconst TaskFlow: React.FC = () => {\n  const {\n    loading,\n    error,\n    columns,\n    newCardText,\n    setNewCardText,\n    handleAddCard,\n    handleDeleteCard,\n    handleDragEnd,\n    setDraggedCard\n  } = useTaskFlow()\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error: {error.message}</p>\n\n  return (\n    <DragDropContext onDragStart={(start) => setDraggedCard(start.draggableId)} onDragEnd={handleDragEnd}>\n      <div className=\"flex overflow-auto\">\n        {columns?.map((column) => (\n          <Droppable droppableId={column.id} key={column.id}>\n            {(provided, snapshot) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                <Column\n                  key={column.id}\n                  id={column.id}\n                  title={column.title}\n                >\n                  {column.cards.map((card, index) => (\n                    <Card\n                      key={card.id}\n                      id={card.id}\n                      index={index}\n                      text={card.text}\n                      handleDeleteCard={() => handleDeleteCard(card.id)}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <div className=\"mt-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Add new card\"\n                      value={cardTextByColumn[column.id] || ''}\n                      onChange={(e) => setCardTextByColumn({\n                        ...cardTextByColumn,\n                        [column.id]: e.target.value\n                      })}\n                      className=\"w-full rounded border border-gray-200 p-2\"\n                    />\n                    <button\n                      onClick={() => {\n                        handleAddCard(column.id, cardTextByColumn[column.id] || '')\n                        setCardTextByColumn({\n                          ...cardTextByColumn,\n                          [column.id]: '' // Clear the input field after adding the card\n                        })\n                      }}\n                      className=\"mt-2 rounded bg-blue-500 px-4 py-2 text-lg text-white hover:bg-blue-600\"\n                    >\n              Add Card\n                    </button>\n                  </div>\n                </Column>\n              </div>\n            )}\n          </Droppable>\n        ))}\n\n      </div>\n    </DragDropContext>\n  )\n}\n\nexport default TaskFlow\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}