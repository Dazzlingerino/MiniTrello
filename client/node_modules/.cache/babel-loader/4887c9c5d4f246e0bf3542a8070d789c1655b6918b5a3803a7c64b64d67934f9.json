{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Modal.tsx\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  children,\n  actionButtons\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 flex items-center justify-center overflow-auto bg-black bg-opacity-40 backdrop-blur-sm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded bg-white p-5 shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-2\",\n        children: [actionButtons, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), document.getElementById('modal-root'));\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["ReactDOM","jsxDEV","_jsxDEV","Modal","isOpen","onClose","children","actionButtons","createPortal","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Modal.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: ReactNode;\n  actionButtons?: ReactNode; // Optional action buttons passed as children\n}\n\nconst Modal: FC<ModalProps> = ({ isOpen, onClose, children, actionButtons }) => {\n  if (!isOpen) return null\n\n  return ReactDOM.createPortal(\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center overflow-auto bg-black bg-opacity-40 backdrop-blur-sm\">\n      <div className=\"rounded bg-white p-5 shadow-lg\">\n        <div className=\"mb-4\">\n          {children}\n        </div>\n        <div className=\"flex justify-end space-x-2\">\n          {actionButtons}\n          <button\n            onClick={onClose}\n            className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.getElementById('modal-root') as HTMLElement\n  )\n}\n\nexport default Modal\n"],"mappings":";AACA,OAAOA,QAAQ,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAShC,MAAMC,KAAqB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAC9E,IAAI,CAACH,MAAM,EAAE,OAAO,IAAI;EAExB,oBAAOJ,QAAQ,CAACQ,YAAY,eAC1BN,OAAA;IAAKO,SAAS,EAAC,2GAA2G;IAAAH,QAAA,eACxHJ,OAAA;MAAKO,SAAS,EAAC,gCAAgC;MAAAH,QAAA,gBAC7CJ,OAAA;QAAKO,SAAS,EAAC,MAAM;QAAAH,QAAA,EAClBA;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNX,OAAA;QAAKO,SAAS,EAAC,4BAA4B;QAAAH,QAAA,GACxCC,aAAa,eACdL,OAAA;UACEY,OAAO,EAAET,OAAQ;UACjBI,SAAS,EAAC,4DAA4D;UAAAH,QAAA,EACvE;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,EACNE,QAAQ,CAACC,cAAc,CAAC,YAAY,CACtC,CAAC;AACH,CAAC;AAAAC,EAAA,GAtBKd,KAAqB;AAwB3B,eAAeA,KAAK;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}