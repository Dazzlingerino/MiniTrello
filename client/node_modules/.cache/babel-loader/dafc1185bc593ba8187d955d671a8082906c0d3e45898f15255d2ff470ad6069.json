{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Board/index.tsx\",\n  _s = $RefreshSig$();\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Column from 'main/components/Board/components/Column';\nimport Card from 'main/components/Board/components/Card';\nimport useBoard from 'main/components/Board/hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    loading,\n    error,\n    columns,\n    users,\n    onDeleteCard,\n    onDragEnd,\n    setDraggedCard,\n    onUserSelect,\n    onAddCard,\n    sortCardsInColumn\n  } = useBoard();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragStart: start => setDraggedCard(start.draggableId),\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 grid-rows-1 gap-4\",\n      children: columns === null || columns === void 0 ? void 0 : columns.map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: String(column.id),\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          className: \"grid min-w-[240px] grid-rows-[40px_minmax(0,_1fr)_80px] rounded bg-gray-100 p-4\",\n          ...provided.droppableProps,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            id: column.id,\n            title: column.title,\n            counter: column.cards.length,\n            onAddCard: onAddCard,\n            sortCardsInColumn: sortCardsInColumn,\n            children: [column.cards.map((card, index) => {\n              var _users$find;\n              return /*#__PURE__*/_jsxDEV(Card, {\n                id: card.id,\n                index: index,\n                text: card.text,\n                assignedUser: (_users$find = users.find(user => user.id === card.assignedUser)) !== null && _users$find !== void 0 ? _users$find : null,\n                users: users,\n                onUserSelect: onUserSelect,\n                onDeleteCard: () => onDeleteCard(card.id)\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this);\n            }), provided.placeholder]\n          }, column.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"5/fKUp7NlxIn+08+3ZHNar2H6lA=\", false, function () {\n  return [useBoard];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["DragDropContext","Droppable","Column","Card","useBoard","jsxDEV","_jsxDEV","Board","_s","loading","error","columns","users","onDeleteCard","onDragEnd","setDraggedCard","onUserSelect","onAddCard","sortCardsInColumn","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onDragStart","start","draggableId","className","map","column","droppableId","String","id","provided","ref","innerRef","droppableProps","title","counter","cards","length","card","index","_users$find","text","assignedUser","find","user","placeholder","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Board/index.tsx"],"sourcesContent":["import { type FC } from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\n\nimport Column from 'main/components/Board/components/Column' \nimport Card from 'main/components/Board/components/Card' \nimport useBoard from 'main/components/Board/hook'\n\nconst Board: FC = () => {\n  const {\n    loading,\n    error,\n    columns,\n    users,\n    onDeleteCard,\n    onDragEnd,\n    setDraggedCard,\n    onUserSelect,\n    onAddCard,\n    sortCardsInColumn\n  } = useBoard()\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error: {error.message}</p>\n\n  return (\n    <DragDropContext onDragStart={(start) => setDraggedCard(start.draggableId)} onDragEnd={onDragEnd}>\n      <div className=\"grid grid-cols-3 grid-rows-1 gap-4\">\n        {columns?.map((column) => (\n          <Droppable droppableId={String(column.id)} key={column.id}>\n            {(provided) => (\n              <div ref={provided.innerRef} \n                className=\"grid min-w-[240px] grid-rows-[40px_minmax(0,_1fr)_80px] rounded bg-gray-100 p-4\"\n                {...provided.droppableProps} \n              >\n                <Column\n                  key={column.id}\n                  id={column.id}\n                  title={column.title}\n                  counter={column.cards.length}\n                  onAddCard={onAddCard}\n                  sortCardsInColumn={sortCardsInColumn}\n                >\n                  {column.cards.map((card, index) => (\n                    <Card\n                      key={card.id}\n                      id={card.id}\n                      index={index}\n                      text={card.text}\n                      assignedUser={users.find(user => user.id === card.assignedUser) ?? null}\n                      users={users}\n                      onUserSelect={onUserSelect}\n                      onDeleteCard={() => onDeleteCard(card.id)}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </Column>\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  )\n}\n\nexport default Board\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}