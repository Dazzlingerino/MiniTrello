{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/TaskFlow.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Column from 'main/components/Column'; // Adjust this import path as necessary\nimport useTaskFlow from 'main/hook'; // Adjust the import path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskFlow = () => {\n  _s();\n  const {\n    loading,\n    error,\n    columns,\n    newCardText,\n    setNewCardText,\n    handleAddCard,\n    handleDeleteCard,\n    users,\n    handleDragStart,\n    handleDragEnd,\n    setDraggedCard\n  } = useTaskFlow();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragStart: start => setDraggedCard(start.draggableId),\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: columns === null || columns === void 0 ? void 0 : columns.map(column => /*#__PURE__*/_jsxDEV(Column, {\n        id: column.id,\n        title: column.title,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add new card\",\n          value: newCardText,\n          onChange: e => setNewCardText(e.target.value),\n          className: \"w-full rounded border border-gray-200 p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddCard(column.id),\n          className: \"mt-2 rounded bg-blue-500 px-4 py-2 text-lg text-white hover:bg-blue-600\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskFlow, \"vT888HysTKwp4/F6QyMXI906WL4=\", false, function () {\n  return [useTaskFlow];\n});\n_c = TaskFlow;\nexport default TaskFlow;\nvar _c;\n$RefreshReg$(_c, \"TaskFlow\");","map":{"version":3,"names":["React","DragDropContext","Column","useTaskFlow","jsxDEV","_jsxDEV","TaskFlow","_s","loading","error","columns","newCardText","setNewCardText","handleAddCard","handleDeleteCard","users","handleDragStart","handleDragEnd","setDraggedCard","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onDragStart","start","draggableId","onDragEnd","className","map","column","id","title","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/TaskFlow.tsx"],"sourcesContent":["import React from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport Column from 'main/components/Column' // Adjust this import path as necessary\nimport useTaskFlow from 'main/hook' // Adjust the import path as necessary\n\nconst TaskFlow: React.FC = () => {\n  const {\n    loading,\n    error,\n    columns,\n    newCardText,\n    setNewCardText,\n    handleAddCard,\n    handleDeleteCard,\n    users,\n    handleDragStart,\n    handleDragEnd,\n    setDraggedCard\n  } = useTaskFlow()\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error: {error.message}</p>\n\n  return (\n    <DragDropContext onDragStart={(start) => setDraggedCard(start.draggableId)} onDragEnd={handleDragEnd}>\n      <div className=\"flex\">\n        {columns?.map((column) => (\n          <Column\n            key={column.id}\n            id={column.id}\n            title={column.title}\n          >\n            {/* Column's children (cards) will be rendered here, possibly using a Droppable wrapper */}\n            <input\n              type=\"text\"\n              placeholder=\"Add new card\"\n              value={newCardText}\n              onChange={(e) => setNewCardText(e.target.value)}\n              className=\"w-full rounded border border-gray-200 p-2\"\n            />\n            <button\n              onClick={() => handleAddCard(column.id)}\n              className=\"mt-2 rounded bg-blue-500 px-4 py-2 text-lg text-white hover:bg-blue-600\"\n            >\n              Add Card\n            </button>\n          </Column>\n        ))}\n      </div>\n    </DragDropContext>\n  )\n}\n\nexport default TaskFlow\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,MAAM,MAAM,wBAAwB,EAAC;AAC5C,OAAOC,WAAW,MAAM,WAAW,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IACJC,OAAO;IACPC,KAAK;IACLC,OAAO;IACPC,WAAW;IACXC,cAAc;IACdC,aAAa;IACbC,gBAAgB;IAChBC,KAAK;IACLC,eAAe;IACfC,aAAa;IACbC;EACF,CAAC,GAAGf,WAAW,CAAC,CAAC;EAEjB,IAAIK,OAAO,EAAE,oBAAOH,OAAA;IAAAc,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAId,KAAK,EAAE,oBAAOJ,OAAA;IAAAc,QAAA,GAAG,SAAO,EAACV,KAAK,CAACe,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACElB,OAAA,CAACJ,eAAe;IAACwB,WAAW,EAAGC,KAAK,IAAKR,cAAc,CAACQ,KAAK,CAACC,WAAW,CAAE;IAACC,SAAS,EAAEX,aAAc;IAAAE,QAAA,eACnGd,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAV,QAAA,EAClBT,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEoB,GAAG,CAAEC,MAAM,iBACnB1B,OAAA,CAACH,MAAM;QAEL8B,EAAE,EAAED,MAAM,CAACC,EAAG;QACdC,KAAK,EAAEF,MAAM,CAACE,KAAM;QAAAd,QAAA,gBAGpBd,OAAA;UACE6B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,cAAc;UAC1BC,KAAK,EAAEzB,WAAY;UACnB0B,QAAQ,EAAGC,CAAC,IAAK1B,cAAc,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDP,SAAS,EAAC;QAA2C;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eACFlB,OAAA;UACEmC,OAAO,EAAEA,CAAA,KAAM3B,aAAa,CAACkB,MAAM,CAACC,EAAE,CAAE;UACxCH,SAAS,EAAC,yEAAyE;UAAAV,QAAA,EACpF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAjBJQ,MAAM,CAACC,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB,CAAC;AAAAhB,EAAA,CA9CKD,QAAkB;EAAA,QAalBH,WAAW;AAAA;AAAAsC,EAAA,GAbXnC,QAAkB;AAgDxB,eAAeA,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}