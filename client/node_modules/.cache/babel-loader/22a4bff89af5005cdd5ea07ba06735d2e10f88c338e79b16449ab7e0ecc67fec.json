{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Board/components/Column.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Modal from 'main/components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Column = ({\n  id,\n  title,\n  counter,\n  children,\n  onAddCard,\n  sortCardsInColumn\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newCardText, setNewCardText] = useState('');\n  const handleAddCard = () => {\n    if (newCardText.trim()) {\n      void onAddCard(id, newCardText);\n      setIsModalOpen(false);\n      setNewCardText('');\n    }\n  };\n  const handleSortChange = event => {\n    const sortOrder = event.target.value;\n    sortCardsInColumn(id, sortOrder);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 grid grid-cols-[auto_minmax(0,_14px)_1fr] gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \" max-h-6 text-lg font-bold\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \" max-h-6 text-lg\",\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSortChange,\n        className: \"max-h-8 max-w-min place-self-end rounded border px-2 py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"creationDate\",\n          children: \"Sort by Creation Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"customOrder\",\n          children: \"Custom Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: id,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"space-y-2\",\n        children: [children, provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalOpen(true),\n      className: \"mb-2 self-end rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600\",\n      children: \"Add Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: handleAddCard,\n      submitBtnTitle: \"Add Card\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCardText,\n        onChange: e => setNewCardText(e.target.value),\n        placeholder: \"Enter card name...\",\n        className: \"w-full rounded border border-gray-200 p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Column, \"sTLsc2r1psrTYkhJOpk69dTFaqE=\");\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["useState","Droppable","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Column","id","title","counter","children","onAddCard","sortCardsInColumn","_s","isModalOpen","setIsModalOpen","newCardText","setNewCardText","handleAddCard","trim","handleSortChange","event","sortOrder","target","value","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","droppableId","provided","ref","innerRef","droppableProps","placeholder","onClick","isOpen","onClose","onSubmit","submitBtnTitle","type","e","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Board/components/Column.tsx"],"sourcesContent":["import { type FC, type ReactNode, useState } from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport Modal from 'main/components/Modal'\n\nexport interface ColumnProps {\n  id: string\n  title: string\n  children: ReactNode\n  counter: number\n  onAddCard: (columnId: string, text: string) => Promise<void>\n  sortCardsInColumn: (columnId: string, sortOrder: string) => void\n}\n\nconst Column: FC<ColumnProps> = ({ \n  id,\n  title,\n  counter,\n  children,\n  onAddCard,\n  sortCardsInColumn \n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [newCardText, setNewCardText] = useState('')\n\n  const handleAddCard = () => {\n    if (newCardText.trim()) {\n      void onAddCard(id, newCardText)\n      setIsModalOpen(false)\n      setNewCardText('')\n    }\n  }\n\n  const handleSortChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const sortOrder = event.target.value\n    sortCardsInColumn(id, sortOrder)\n  }\n\n  return (\n    <>\n      <div className='mb-4 grid grid-cols-[auto_minmax(0,_14px)_1fr] gap-2'>\n        <h2 className=\" max-h-6 text-lg font-bold\">{title}</h2>\n        <h3 className=\" max-h-6 text-lg\">{counter}</h3>\n        <select onChange={handleSortChange} className=\"max-h-8 max-w-min place-self-end rounded border px-2 py-1\">\n          <option value=\"creationDate\">Sort by Creation Date</option>\n          <option value=\"customOrder\">Custom Sort</option>\n        </select>\n      </div>\n      <Droppable droppableId={id}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className=\"space-y-2\"\n          >\n            {children}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n\n      <button \n        onClick={() => setIsModalOpen(true)} \n        className=\"mb-2 self-end rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600\">\n        Add Card\n      </button>\n\n      {isModalOpen && (\n        <Modal \n          isOpen={isModalOpen} \n          onClose={() => setIsModalOpen(false)} \n          onSubmit={handleAddCard}\n          submitBtnTitle='Add Card'\n        >\n          <input\n            type=\"text\"\n            value={newCardText}\n            onChange={(e) => setNewCardText(e.target.value)}\n            placeholder=\"Enter card name...\"\n            className=\"w-full rounded border border-gray-200 p-2\"\n          />\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default Column\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}