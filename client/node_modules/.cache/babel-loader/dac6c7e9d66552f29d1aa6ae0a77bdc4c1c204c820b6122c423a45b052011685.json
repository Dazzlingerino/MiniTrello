{"ast":null,"code":"const generateColorForString = (str, colors, defaultColor) => {\n  if (str == null || str.trim() === '') {\n    return defaultColor;\n  }\n  // Use a simple hash function to map the string to a number in the range 0 to colors.length - 1\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  hash = Math.abs(hash % colors.length);\n  return colors[hash];\n};\nexport default generateColorForString;","map":{"version":3,"names":["generateColorForString","str","colors","defaultColor","trim","hash","i","length","charCodeAt","Math","abs"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/utils/generateColorForString.ts"],"sourcesContent":["const generateColorForString = (str: string | null, colors: string[], defaultColor: string): string => {\n  if (str == null || str.trim() === '') {\n    return defaultColor\n  }\n  // Use a simple hash function to map the string to a number in the range 0 to colors.length - 1\n  let hash = 0\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\n  }\n\n  hash = Math.abs(hash % colors.length)\n  return colors[hash]\n}\n\nexport default generateColorForString\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAGA,CAACC,GAAkB,EAAEC,MAAgB,EAAEC,YAAoB,KAAa;EACrG,IAAIF,GAAG,IAAI,IAAI,IAAIA,GAAG,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACpC,OAAOD,YAAY;EACrB;EACA;EACA,IAAIE,IAAI,GAAG,CAAC;EAEZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCD,IAAI,GAAGJ,GAAG,CAACO,UAAU,CAACF,CAAC,CAAC,IAAI,CAACD,IAAI,IAAI,CAAC,IAAIA,IAAI,CAAC;EACjD;EAEAA,IAAI,GAAGI,IAAI,CAACC,GAAG,CAACL,IAAI,GAAGH,MAAM,CAACK,MAAM,CAAC;EACrC,OAAOL,MAAM,CAACG,IAAI,CAAC;AACrB,CAAC;AAED,eAAeL,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}