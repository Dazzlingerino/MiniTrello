{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Modal.tsx\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  children\n}) => {\n  if (!isOpen) return null;\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission\n    onSubmit(); // Call the onSubmit prop function\n  };\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed left-0 top-0 flex size-full items-center justify-center bg-black bg-opacity-50 backdrop-blur\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded bg-white p-8 shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"grid\",\n        children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddCard,\n            className: \"rounded bg-green-500 px-4 py-2 text-white hover:bg-green-600\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            className: \"rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), document.getElementById('modal-root'));\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["ReactDOM","jsxDEV","_jsxDEV","Modal","isOpen","onClose","onSubmit","children","handleSubmit","e","preventDefault","createPortal","className","onClick","handleAddCard","fileName","_jsxFileName","lineNumber","columnNumber","setIsModalOpen","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Modal.tsx"],"sourcesContent":["import { type FC, type ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\n\nexport interface ModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onSubmit: () => void\n  children: ReactNode\n}\n\nconst Modal: FC<ModalProps> = ({ isOpen, onClose, onSubmit, children }) => {\n  if (!isOpen) return null\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault() // Prevent default form submission\n    onSubmit() // Call the onSubmit prop function\n  }\n\n  return ReactDOM.createPortal(\n    <div className=\"fixed left-0 top-0 flex size-full items-center justify-center bg-black bg-opacity-50 backdrop-blur\">\n      <div className=\"rounded bg-white p-8 shadow-md\">\n        <form onSubmit={handleSubmit} className='grid'>\n          {children}\n          <div className=\"flex justify-end space-x-2\">\n            <button onClick={handleAddCard} className=\"rounded bg-green-500 px-4 py-2 text-white hover:bg-green-600\">\n            Submit\n            </button>\n            <button onClick={() => setIsModalOpen(false)} className=\"rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600\">\n            Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>,\n    document.getElementById('modal-root') as HTMLElement\n  )\n}\n\nexport default Modal\n"],"mappings":";AACA,OAAOA,QAAQ,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAShC,MAAMC,KAAqB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACzE,IAAI,CAACH,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMI,YAAY,GAAIC,CAAmC,IAAK;IAC5DA,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC;IACnBJ,QAAQ,CAAC,CAAC,EAAC;EACb,CAAC;EAED,oBAAON,QAAQ,CAACW,YAAY,eAC1BT,OAAA;IAAKU,SAAS,EAAC,oGAAoG;IAAAL,QAAA,eACjHL,OAAA;MAAKU,SAAS,EAAC,gCAAgC;MAAAL,QAAA,eAC7CL,OAAA;QAAMI,QAAQ,EAAEE,YAAa;QAACI,SAAS,EAAC,MAAM;QAAAL,QAAA,GAC3CA,QAAQ,eACTL,OAAA;UAAKU,SAAS,EAAC,4BAA4B;UAAAL,QAAA,gBACzCL,OAAA;YAAQW,OAAO,EAAEC,aAAc;YAACF,SAAS,EAAC,8DAA8D;YAAAL,QAAA,EAAC;UAEzG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThB,OAAA;YAAQW,OAAO,EAAEA,CAAA,KAAMM,cAAc,CAAC,KAAK,CAAE;YAACP,SAAS,EAAC,0DAA0D;YAAAL,QAAA,EAAC;UAEnH;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,EACNE,QAAQ,CAACC,cAAc,CAAC,YAAY,CACtC,CAAC;AACH,CAAC;AAAAC,EAAA,GA1BKnB,KAAqB;AA4B3B,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}