{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Card.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Users from './Users';\nimport IconSVG from './inlineImages';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  id,\n  index,\n  title,\n  // New prop for the title\n  text,\n  users,\n  assignedUser,\n  onUserSelect,\n  onDeleteCard,\n  onAddText // New prop for adding text\n}) => {\n  _s();\n  const [showUserList, setShowUserList] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State for controlling the modal\n\n  const handleAddText = newText => {\n    onAddText(id, newText);\n    setIsModalOpen(false); // Close the modal after adding text\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      className: \"mb-2 flex flex-col space-y-2 rounded bg-white p-2 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true) // Open the modal when clicked\n            ,\n            className: \"outline-none focus:outline-none\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDeleteCard(id),\n            className: \"text-xs text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Users // Display users\n        , {\n          users: users,\n          showUserList: showUserList,\n          onUserSelect: (_, user) => onUserSelect(id, user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconSVG.Person, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal // Modal for adding text\n      , {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        onSubmit: handleAddText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"rc3N/274dwIM9CIvXQMzRwC+pHw=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useState","Draggable","Users","IconSVG","Modal","jsxDEV","_jsxDEV","Card","id","index","title","text","users","assignedUser","onUserSelect","onDeleteCard","onAddText","_s","showUserList","setShowUserList","isModalOpen","setIsModalOpen","handleAddText","newText","draggableId","children","provided","ref","innerRef","draggableProps","dragHandleProps","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_","user","Person","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Card.tsx"],"sourcesContent":["import { FC, useState } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { User } from 'main/types'\nimport Users from './Users'\nimport IconSVG from './inlineImages'\nimport Modal from './Modal'\n\ninterface CardProps {\n  id: string;\n  index: number;\n  title: string; // New prop for the title\n  text: string;\n  users: User[];\n  assignedUser: User | null;\n  onUserSelect: (cardId: string, user: User) => Promise<void>;\n  onDeleteCard: (cardId: string) => Promise<void>;\n  onAddText: (cardId: string, text: string) => void; // New prop for adding text\n}\n\nconst Card: FC<CardProps> = ({\n  id,\n  index,\n  title, // New prop for the title\n  text,\n  users,\n  assignedUser,\n  onUserSelect,\n  onDeleteCard,\n  onAddText // New prop for adding text\n}) => {\n  const [showUserList, setShowUserList] = useState(false)\n  const [isModalOpen, setIsModalOpen] = useState(false) // State for controlling the modal\n\n  const handleAddText = (newText: string) => {\n    onAddText(id, newText)\n    setIsModalOpen(false) // Close the modal after adding text\n  }\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"mb-2 flex flex-col space-y-2 rounded bg-white p-2 shadow\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <p className=\"font-bold\">{title}</p> {/* Display the title */}\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => setIsModalOpen(true)} // Open the modal when clicked\n                className=\"outline-none focus:outline-none\"\n              >\n                <p>Edit</p>\n              </button>\n              <button\n                onClick={() => onDeleteCard(id)}\n                className=\"text-xs text-gray-500 hover:text-gray-700\"\n              >\n                <p>Delete</p>\n              </button>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Users // Display users\n              users={users}\n              showUserList={showUserList}\n              onUserSelect={(_, user) => onUserSelect(id, user)}\n            />\n            <IconSVG.Person /> {/* Display user icon */}\n          </div>\n          <Modal // Modal for adding text\n            isOpen={isModalOpen}\n            onClose={() => setIsModalOpen(false)}\n            onSubmit={handleAddText}\n          />\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Card\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}