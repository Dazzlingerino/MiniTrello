{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Card.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport UsersList from './UsersList'; // Adjust the import if necessary\nimport IconSVG from './inlineImages'; // Ensure you have a ThreeDots icon here\nimport generateColorForString from 'main/utils/generateColorForString';\nimport Modal from './Modal'; // Adjust the import if necessary\nimport { AVATAR_COLORS, DEFAULT_AVATAR_COLOR } from 'main/constants';\n// Adjust the import if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  id,\n  index,\n  text,\n  assignedUser,\n  users,\n  onUserSelect,\n  onDeleteCard,\n  onAddText // Assuming this might be used for a different feature than what Modal currently supports\n}) => {\n  _s();\n  const [showUserList, setShowUserList] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleUserSelectInternal = async user => {\n    await onUserSelect(id, user);\n    setSelectedUser(user);\n    setShowUserList(false);\n  };\n\n  // Example of a delete button as an action for the modal\n  const deleteActionButton = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      onDeleteCard().then(() => setIsModalOpen(false)); // Close modal after delete\n    },\n    className: \"rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600\",\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: id,\n    index: index,\n    children: provided => {\n      var _assignedUser$name;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: \"mb-2 flex flex-col space-y-2 rounded bg-white p-2 shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowUserList(!showUserList),\n              className: \"outline-none focus:outline-none\",\n              children: /*#__PURE__*/_jsxDEV(IconSVG.Person, {\n                color: generateColorForString((_assignedUser$name = assignedUser === null || assignedUser === void 0 ? void 0 : assignedUser.name) !== null && _assignedUser$name !== void 0 ? _assignedUser$name : '', AVATAR_COLORS, DEFAULT_AVATAR_COLOR)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsModalOpen(true),\n              className: \"outline-none focus:outline-none\",\n              children: /*#__PURE__*/_jsxDEV(IconSVG.ThreeDots, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), showUserList && /*#__PURE__*/_jsxDEV(UsersList, {\n          users: users,\n          showUserList: showUserList,\n          onUserSelect: handleUserSelectInternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isModalOpen,\n          onClose: () => setIsModalOpen(false),\n          actionButtons: deleteActionButton // Pass action buttons as children\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Custom content for this modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"rc3N/274dwIM9CIvXQMzRwC+pHw=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useState","Draggable","UsersList","IconSVG","generateColorForString","Modal","AVATAR_COLORS","DEFAULT_AVATAR_COLOR","jsxDEV","_jsxDEV","Card","id","index","text","assignedUser","users","onUserSelect","onDeleteCard","onAddText","_s","showUserList","setShowUserList","isModalOpen","setIsModalOpen","handleUserSelectInternal","user","setSelectedUser","deleteActionButton","onClick","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","draggableId","provided","_assignedUser$name","ref","innerRef","draggableProps","dragHandleProps","Person","color","name","ThreeDots","isOpen","onClose","actionButtons","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Card.tsx"],"sourcesContent":["import { FC, useState } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport UsersList from './UsersList' // Adjust the import if necessary\nimport IconSVG from './inlineImages' // Ensure you have a ThreeDots icon here\nimport generateColorForString from 'main/utils/generateColorForString'\nimport Modal from './Modal' // Adjust the import if necessary\nimport { AVATAR_COLORS, DEFAULT_AVATAR_COLOR } from 'main/constants'\nimport { User } from 'main/types' // Adjust the import if necessary\n\ninterface CardProps {\n  id: string;\n  index: number;\n  text: string;\n  assignedUser: User | null;\n  users: User[];\n  onUserSelect: (cardId: string, user: User) => Promise<void>;\n  onDeleteCard: () => Promise<void>;\n  onAddText: (text: string) => void; // This prop seems to be for adding text but is not directly used as described\n}\n\nconst Card: FC<CardProps> = ({\n  id,\n  index,\n  text,\n  assignedUser,\n  users,\n  onUserSelect,\n  onDeleteCard,\n  onAddText // Assuming this might be used for a different feature than what Modal currently supports\n}) => {\n  const [showUserList, setShowUserList] = useState(false)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const handleUserSelectInternal = async (user: User) => {\n    await onUserSelect(id, user)\n    setSelectedUser(user)\n    setShowUserList(false)\n  }\n\n  // Example of a delete button as an action for the modal\n  const deleteActionButton = (\n    <button\n      onClick={() => {\n        onDeleteCard().then(() => setIsModalOpen(false)) // Close modal after delete\n      }}\n      className=\"rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600\"\n    >\n      Delete\n    </button>\n  )\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"mb-2 flex flex-col space-y-2 rounded bg-white p-2 shadow\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <p>{text}</p>\n            <div className=\"flex items-center space-x-2\">\n              <button onClick={() => setShowUserList(!showUserList)} className=\"outline-none focus:outline-none\">\n                <IconSVG.Person color={generateColorForString(assignedUser?.name ?? '', AVATAR_COLORS, DEFAULT_AVATAR_COLOR)} />\n              </button>\n              <button onClick={() => setIsModalOpen(true)} className=\"outline-none focus:outline-none\">\n                <IconSVG.ThreeDots />\n              </button>\n            </div>\n          </div>\n          {showUserList && (\n            <UsersList\n              users={users}\n              showUserList={showUserList}\n              onUserSelect={handleUserSelectInternal}\n            />\n          )}\n          {isModalOpen && (\n            <Modal\n              isOpen={isModalOpen}\n              onClose={() => setIsModalOpen(false)}\n              actionButtons={deleteActionButton} // Pass action buttons as children\n            >\n              {/* Modal content goes here, e.g., form for adding text or other information */}\n              <div>Custom content for this modal</div>\n            </Modal>\n          )}\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Card\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}