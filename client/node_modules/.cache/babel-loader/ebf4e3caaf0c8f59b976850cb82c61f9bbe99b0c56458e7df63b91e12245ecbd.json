{"ast":null,"code":"var _jsxFileName = \"/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Card.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react'; // Import useState hook\nimport { Draggable } from 'react-beautiful-dnd';\nimport UsersList from './UsersList';\nimport IconSVG from './inlineImages';\nimport generateColorForString from 'main/utils/generateColorForString';\nimport Modal from './Modal'; // Import the Modal component\nimport { AVATAR_COLORS, DEFAULT_AVATAR_COLOR } from 'main/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  key,\n  id,\n  index,\n  text,\n  assignedUser,\n  users,\n  onUserSelect,\n  onDeleteCard,\n  onAddText // Include onAddText prop\n}) => {\n  _s();\n  const [showUserList, setShowUserList] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n  const handleUserSelect = async user => {\n    await onUserSelect(id, user);\n    setSelectedUser(user);\n    setShowUserList(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: id,\n    index: index,\n    children: provided => {\n      var _selectedUser$name;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: \"mb-2 flex flex-col space-y-2 rounded bg-white p-2 shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowUserList(!showUserList),\n              className: \"outline-none focus:outline-none\",\n              children: /*#__PURE__*/_jsxDEV(IconSVG.Person, {\n                color: generateColorForString((_selectedUser$name = selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name) !== null && _selectedUser$name !== void 0 ? _selectedUser$name : '', AVATAR_COLORS, DEFAULT_AVATAR_COLOR)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsModalOpen(true),\n              className: \"outline-none focus:outline-none\",\n              children: [/*#__PURE__*/_jsxDEV(IconSVG.ThreeDots, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(UsersList, {\n            users: users,\n            showUserList: showUserList,\n            onUserSelect: handleUserSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n          onClose: () => setIsModalOpen(false),\n          onActionBtnClick: onDeleteCard,\n          cardId: id,\n          onSubmit: onAddText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"9GLYacqssiAozu8rCegt099s18Y=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useState","Draggable","UsersList","IconSVG","generateColorForString","Modal","AVATAR_COLORS","DEFAULT_AVATAR_COLOR","jsxDEV","_jsxDEV","Card","key","id","index","text","assignedUser","users","onUserSelect","onDeleteCard","onAddText","_s","showUserList","setShowUserList","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","handleUserSelect","user","draggableId","children","provided","_selectedUser$name","ref","innerRef","draggableProps","dragHandleProps","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Person","color","name","ThreeDots","onClose","onActionBtnClick","cardId","onSubmit","_c","$RefreshReg$"],"sources":["/Users/dazzlinger/Desktop/start_here/TaskFlow/client/src/main/components/Card.tsx"],"sourcesContent":["import { type FC } from 'react'\nimport { useState } from 'react' // Import useState hook\nimport { Draggable } from 'react-beautiful-dnd'\nimport UsersList from './UsersList'\nimport IconSVG from './inlineImages'\nimport generateColorForString from 'main/utils/generateColorForString'\nimport Modal from './Modal' // Import the Modal component\nimport { AVATAR_COLORS, DEFAULT_AVATAR_COLOR } from 'main/constants'\nimport { User } from 'main/types'\n\ninterface CardProps {\n  key: string;\n  id: string;\n  index: number;\n  text: string;\n  assignedUser: User | null;\n  users: User[];\n  onUserSelect: (cardId: string, user: User) => Promise<void>\n  onDeleteCard: () => Promise<void>;\n  onAddText: (text: string) => void; // Add onAddText prop\n}\n\nconst Card: FC<CardProps> = ({\n  key,\n  id,\n  index,\n  text,\n  assignedUser,\n  users,\n  onUserSelect,\n  onDeleteCard,\n  onAddText // Include onAddText prop\n}) => {\n  const [showUserList, setShowUserList] = useState(false)\n  const [selectedUser, setSelectedUser] = useState<User | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false) // State to control modal visibility\n\n  const handleUserSelect = async (user: User) => {\n    await onUserSelect(id, user)\n    setSelectedUser(user)\n    setShowUserList(false)\n  }\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"mb-2 flex flex-col space-y-2 rounded bg-white p-2 shadow\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <p>{text}</p>\n            <div className=\"flex items-center space-x-2\">\n              <button onClick={() => setShowUserList(!showUserList)} className=\"outline-none focus:outline-none\">\n                <IconSVG.Person color={generateColorForString(selectedUser?.name ?? '', AVATAR_COLORS, DEFAULT_AVATAR_COLOR)} />\n              </button>\n              <button\n                onClick={() => setIsModalOpen(true)}\n                className=\"outline-none focus:outline-none\"\n              >\n                <IconSVG.ThreeDots /> {/* Replace with your 3 dots icon */}\n              </button>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\"> {/* Render user icon */}\n            <UsersList\n              users={users}\n              showUserList={showUserList}\n              onUserSelect={handleUserSelect}\n            />\n          </div>\n          {isModalOpen && (\n            <Modal\n              onClose={() => setIsModalOpen(false)}\n              onActionBtnClick={onDeleteCard}\n              cardId={id}\n              onSubmit={onAddText}\n            />\n          )}\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Card\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO,EAAC;AACjC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,KAAK,MAAM,SAAS,EAAC;AAC5B,SAASC,aAAa,EAAEC,oBAAoB,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAepE,MAAMC,IAAmB,GAAGA,CAAC;EAC3BC,GAAG;EACHC,EAAE;EACFC,KAAK;EACLC,IAAI;EACJC,YAAY;EACZC,KAAK;EACLC,YAAY;EACZC,YAAY;EACZC,SAAS,CAAC;AACZ,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC,EAAC;;EAEtD,MAAM2B,gBAAgB,GAAG,MAAOC,IAAU,IAAK;IAC7C,MAAMX,YAAY,CAACL,EAAE,EAAEgB,IAAI,CAAC;IAC5BJ,eAAe,CAACI,IAAI,CAAC;IACrBN,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA,CAACR,SAAS;IAAC4B,WAAW,EAAEjB,EAAG;IAACC,KAAK,EAAEA,KAAM;IAAAiB,QAAA,EACrCC,QAAQ;MAAA,IAAAC,kBAAA;MAAA,oBACRvB,OAAA;QACEwB,GAAG,EAAEF,QAAQ,CAACG,QAAS;QAAA,GACnBH,QAAQ,CAACI,cAAc;QAAA,GACvBJ,QAAQ,CAACK,eAAe;QAC5BC,SAAS,EAAC,0DAA0D;QAAAP,QAAA,gBAEpErB,OAAA;UAAK4B,SAAS,EAAC,mCAAmC;UAAAP,QAAA,gBAChDrB,OAAA;YAAAqB,QAAA,EAAIhB;UAAI;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbhC,OAAA;YAAK4B,SAAS,EAAC,6BAA6B;YAAAP,QAAA,gBAC1CrB,OAAA;cAAQiC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,CAACD,YAAY,CAAE;cAACgB,SAAS,EAAC,iCAAiC;cAAAP,QAAA,eAChGrB,OAAA,CAACN,OAAO,CAACwC,MAAM;gBAACC,KAAK,EAAExC,sBAAsB,EAAA4B,kBAAA,GAACT,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsB,IAAI,cAAAb,kBAAA,cAAAA,kBAAA,GAAI,EAAE,EAAE1B,aAAa,EAAEC,oBAAoB;cAAE;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1G,CAAC,eACThC,OAAA;cACEiC,OAAO,EAAEA,CAAA,KAAMhB,cAAc,CAAC,IAAI,CAAE;cACpCW,SAAS,EAAC,iCAAiC;cAAAP,QAAA,gBAE3CrB,OAAA,CAACN,OAAO,CAAC2C,SAAS;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,KAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNhC,OAAA;UAAK4B,SAAS,EAAC,6BAA6B;UAAAP,QAAA,GAAC,GAAC,eAC5CrB,OAAA,CAACP,SAAS;YACRc,KAAK,EAAEA,KAAM;YACbK,YAAY,EAAEA,YAAa;YAC3BJ,YAAY,EAAEU;UAAiB;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACLhB,WAAW,iBACVhB,OAAA,CAACJ,KAAK;UACJ0C,OAAO,EAAEA,CAAA,KAAMrB,cAAc,CAAC,KAAK,CAAE;UACrCsB,gBAAgB,EAAE9B,YAAa;UAC/B+B,MAAM,EAAErC,EAAG;UACXsC,QAAQ,EAAE/B;QAAU;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAArB,EAAA,CA/DKV,IAAmB;AAAAyC,EAAA,GAAnBzC,IAAmB;AAiEzB,eAAeA,IAAI;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}